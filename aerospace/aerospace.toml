# TODO: ask about auto-complete lsp support for this file name?

# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true


# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = false
enable-normalization-opposite-orientation-for-nested-containers = true

# TODO: learn what is this?
non-empty-workspaces-root-containers-layout-on-startup = 'smart'

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = [
  'move-mouse window-lazy-center',
] # Mouse lazily follows any focus (window or workspace)

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 8
inner.vertical = 8
outer.left = 8
outer.bottom = 8
outer.top = 8
outer.right = 8

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget 
# tell application "Wezterm"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
# TODO: come up with a more intuitive keybinding for this?
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
# TODO: integrate with tmux vim navigation
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'
alt-0 = 'balance-sizes'

# TODO: is this helpful? How does it work?
alt-shift-n = 'split opposite'
alt-shift-ctrl-0 = 'flatten-workspace-tree'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'
alt-shift-f = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'
alt-shift-8 = 'resize smart -200'
alt-shift-9 = 'resize smart +200'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-a = 'workspace A'
alt-d = 'workspace D'
alt-s = 'workspace S'
alt-q = 'workspace Q'
alt-w = 'workspace W'
alt-e = 'workspace E'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-a = ['move-node-to-workspace A', 'workspace A']
alt-shift-d = ['move-node-to-workspace D', 'workspace D']
alt-shift-s = ['move-node-to-workspace S', 'workspace S']
alt-shift-v = ['move-node-to-workspace Q', 'workspace Q']
alt-shift-w = ['move-node-to-workspace W', 'workspace W']
alt-shift-z = ['move-node-to-workspace E', 'workspace E']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
# alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
# alt-shift-b = 'ctrl-node-to-workspace B'
# alt-shift-c = 'move-node-to-workspace C'
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# ctrl-alt-shift-h = ['join-with left', 'mode main']
# ctrl-alt-shift-j = ['join-with down', 'mode main']
# ctrl-alt-shift-k = ['join-with up', 'mode main']
# ctrl-alt-shift-l = ['join-with right', 'mode main']

# [[on-window-detected]]
# if.app-id = 'com.github.wez.wezterm'
# run = "move-node-to-workspace A"

[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = "move-node-to-workspace A"

# [[on-window-detected]]
# if.app-id = 'info.pkpk.inkdrop'
# run = "move-node-to-workspace A"
#
# [[on-window-detected]]
# if.app-id = 'com.sigmaos.sigmaos.macos'
# run = "move-node-to-workspace S"
#
# [[on-window-detected]]
# if.app-id = 'org.whispersystems.signal-desktop'
# run = "move-node-to-workspace S"
#
# [[on-window-detected]]
# if.app-id = 'com.microsoft.teams'
# run = "move-node-to-workspace S"
#
# [[on-window-detected]]
# if.app-id = 'com.tinyspeck.slackmacgap'
# run = "move-node-to-workspace M"
#
# [[on-window-detected]]
# if.app-id = 'com.bitwarden.desktop '
# run = "move-node-to-workspace Q"
#
# [[on-window-detected]]
# if.app-id = 'com.jgraph.drawio.desktop'
# run = "move-node-to-workspace D"
#
# [[on-window-detected]]
# if.app-id = 'com.microsoft.Outlook'
# run = "move-node-to-workspace D"
#
# [[on-window-detected]]
# if.app-id = 'us.zoom.xos '
# run = "move-node-to-workspace Z"

# [[on-window-detected]]
# if.app-id = ''
# run = "move-node-to-workspace B"
#
# [[on-window-detected]]
# if.app-id = ''
# run = "move-node-to-workspace B"
#
# [[on-window-detected]]
# if.app-id = ''
# run = "move-node-to-workspace B"
#
# [[on-window-detected]]
# if.app-id = ''
# run = "move-node-to-workspace B"

